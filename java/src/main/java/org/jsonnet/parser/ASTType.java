package org.jsonnet.parser;

public enum ASTType {
    AST_APPLY("AST_APPLY"),
    AST_ARRAY("AST_ARRAY"),
    AST_ARRAY_COMPREHENSION("AST_ARRAY_COMPREHENSION"),
    AST_ARRAY_COMPREHENSION_SIMPLE("AST_ARRAY_COMPREHENSION_SIMPLE"),
    AST_ASSERT("AST_ASSERT"),
    AST_BINARY("AST_BINARY"),
    AST_BUILTIN_FUNCTION("AST_BUILTIN_FUNCTION"),
    AST_CONDITIONAL("AST_CONDITIONAL"),
    AST_DESUGARED_OBJECT("AST_DESUGARED_OBJECT"),
    AST_DOLLAR("AST_DOLLAR"),
    AST_ERROR("AST_ERROR"),
    AST_FUNCTION("AST_FUNCTION"),
    AST_IMPORT("AST_IMPORT"),
    AST_IMPORTSTR("AST_IMPORTSTR"),
    AST_INDEX("AST_INDEX"),
    AST_IN_SUPER("AST_IN_SUPER"),
    AST_LITERAL_BOOLEAN("AST_LITERAL_BOOLEAN"),
    AST_LITERAL_NULL("AST_LITERAL_NULL"),
    AST_LITERAL_NUMBER("AST_LITERAL_NUMBER"),
    AST_LITERAL_STRING("AST_LITERAL_STRING"),
    AST_LOCAL("AST_LOCAL"),
    AST_OBJECT("AST_OBJECT"),
    AST_OBJECT_COMPREHENSION("AST_OBJECT_COMPREHENSION"),
    AST_OBJECT_COMPREHENSION_SIMPLE("AST_OBJECT_COMPREHENSION_SIMPLE"),
    AST_PARENS("AST_PARENS"),
    AST_SELF("AST_SELF"),
    AST_SUPER_INDEX("AST_SUPER_INDEX"),
    AST_UNARY("AST_UNARY"),
    AST_VAR("AST_VAR");

    private ASTType(final String string) {
        this.string = string;
    }

    @Override
    public String toString() {
        return this.string;
    }

    private final String string;
}
